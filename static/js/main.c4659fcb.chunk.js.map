{"version":3,"sources":["assets/font-color-contrast-logo.svg","components/Logo.tsx","components/ViewOnButton.tsx","components/Header.tsx","components/Slider.tsx","components/ColorCode.tsx","pages/ColorsSheet.tsx","components/font.tsx","pages/ColorPicker.tsx","components/Code.tsx","pages/Home.tsx","components/cssNamedColors.ts","pages/CssColorsSheet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","sx","Typography","className","variant","noWrap","component","to","src","logo","alt","ViewOnButton","url","text","icon","Button","color","display","lg","xs","endIcon","href","target","rel","md","paddingRight","pages","name","link","Header","useState","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","position","enableColorOnDark","Container","maxWidth","Toolbar","disableGutters","justifyContent","mr","Box","flexGrow","map","page","my","textAlign","ButtonGroup","marginLeft","IconButton","size","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Slider","min","max","value","setValue","cls","type","onChange","toHex","num","txt","Number","toString","toUpperCase","repeat","length","ColorCode","red","green","blue","r","g","b","console","log","undefined","clean","replace","substring","sliceSize","ColorsSheet","setRed","setGreen","colorsSheet","setColorsSheet","colorsLoaded","setColorsLoaded","useEffect","getColorsSheet","then","sheet","alignItems","flexWrap","padding","Paper","elevation","i","bgColor","divStyle","backgroundColor","fontColorContrast","style","colorSheet","a","colors","generator","push","next","fontFamilies","noRead","fontSizes","fontOptions","font","index","fontFamily","sizeOptions","ColorPicker","fontIndex","setFontIndex","setColor","sizeIndex","setSizeIndex","setBgColor","FormControl","marginRight","width","InputLabel","Select","labelId","label","Card","CardContent","Grid","container","spacing","columns","item","paddingLeft","fontSize","Code","children","copy","ts","setOpen","Alert","forwardRef","props","ref","handleClick","navigator","clipboard","writeText","textContent","handleClose","reason","content","parsed","Prism","highlight","languages","typescript","dangerouslySetInnerHTML","__html","Snackbar","autoHideDuration","severity","Tooltip","title","highLight","Home","exampleTab","setExampleTab","Tabs","newValue","Tab","cssNamedColors","hex","CssColorsSheet","listColors","App","pickerColor","setPickerColor","CssBaseline","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","getContrastText","mode","background","default","primary","main","secondary","error","warning","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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AAM,aACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,iBACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,iBACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,eACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,eACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,uBACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,eACNuK,IAAK,WAET,CACIvK,KAAM,iBACNuK,IAAK,WAET,CACIvK,KAAM,iBACNuK,IAAK,WAET,CACIvK,KAAM,iBACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,mBACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,eACNuK,IAAK,WAET,CACIvK,KAAM,eACNuK,IAAK,WAET,CACIvK,KAAM,iBACNuK,IAAK,WAET,CACIvK,KAAM,kBACNuK,IAAK,WAET,CACIvK,KAAM,oBACNuK,IAAK,WAET,CACIvK,KAAM,kBACNuK,IAAK,WAET,CACIvK,KAAM,kBACNuK,IAAK,WAET,CACIvK,KAAM,eACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,MACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,WACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,MACNuK,IAAK,WAET,CACIvK,KAAM,OACNuK,IAAK,WAET,CACIvK,KAAM,UACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,YACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,QACNuK,IAAK,WAET,CACIvK,KAAM,aACNuK,IAAK,WAET,CACIvK,KAAM,SACNuK,IAAK,WAET,CACIvK,KAAM,cACNuK,IAAK,WAET,CACIvK,KAAM,gBACNuK,IAAK,aCzkBN,SAASC,KAad,OACE,cAAC9J,EAAA,EAAD,CAAWlC,UAAU,gBAArB,SACE,cAAC6G,EAAA,EAAD,CAAO7G,UAAU,4BAA4B8G,UAAW,EAAxD,SAdJ,WACE,IAAIC,EAAI,EACR,OAAO+E,GAAepJ,KAAI,SAACsE,GACvB,IAAMnG,EAAQsG,IAAkBH,EAAQ+E,KAClC9E,EAAW,CACfC,gBAAiBF,EAAQ+E,IACzBlL,MAAOA,GAEX,OAAO,qBAAeb,UAAU,kBAAkBoH,MAAOH,EAAlD,SAA6DD,EAAQxF,MAA3DuF,QAOdkF,OCZF,SAASC,KACd,MAAsBvK,mBAAS,GAA/B,mBAAOuD,EAAP,KAAYc,EAAZ,KACA,EAA0BrE,mBAAS,GAAnC,mBAAOwD,EAAP,KAAcc,EAAd,KACA,EAAkCtE,mBAAS,GAA3C,mBAAOyG,EAAP,KAAkBC,EAAlB,KACA,EAAkC1G,mBAAS,GAA3C,mBAAO4G,EAAP,KAAkBC,EAAlB,KACA,EAAsC7G,mBAAS,WAA/C,mBAAOwK,EAAP,KAAoBC,EAApB,KAEA,OACE,cAAC,IAAD,UACE,eAACC,GAAA,EAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,UACLC,QAAS,cAAC,EAAD,CACPnE,UAAWA,EACXC,aAAcA,EACdE,UAAWA,EACXC,aAAcA,EACd3H,MAAOsL,EACP7D,SAAU8D,MAGd,cAAC,IAAD,CACEE,KAAK,SACLC,QAAS,cAAC,EAAD,CACPrH,IAAKA,EACLc,OAAQA,EACRb,MAAOA,EACPc,SAAUA,MAGd,cAAC,IAAD,CACEqG,KAAK,aACLC,QAAS,cAAC,GAAD,cC9CrB,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBlG,MAAK,YAAkD,IAA/CmG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4BCDRO,GAAQC,aAAY,CACxBC,QAAS,CACPC,gBAAiBhG,IACjBiG,KAAM,OACNC,WAAY,CACVC,QAAS,WAEXC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAM,WAERG,QAAS,CACPH,KAAM,cAKN7K,GACJ,cAACiL,GAAA,EAAD,CAAeZ,MAAOA,GAAtB,SACE,cAACX,GAAA,EAAD,UACE,cAAC,GAAD,QAKNwB,IAASC,OAAOnL,GAAMoL,SAASC,eAAe,SAM9CxB,O","file":"static/js/main.c4659fcb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/font-color-contrast-logo.50682084.svg\";","import { Typography } from \"@mui/material\";\nimport { SxProps, Theme } from \"@mui/system\";\nimport { Link } from \"react-router-dom\";\nimport './Logo.css'\nimport logo from '../assets/font-color-contrast-logo.svg'\nexport function Logo ({ sx }: {\n  sx?: SxProps<Theme>,\n}) {\n  return(\n    <Typography\n      className='navbar-item logo'\n      variant='h5'\n      noWrap\n      component='div'\n      sx={sx}\n    >\n      <Link to='/'>\n        <img src={logo} alt=\"logo\" />\n        <div className='logo-text'>font-color-contrast</div>\n      </Link>\n    </Typography>\n  )\n}\n","import { Button } from \"@mui/material\";\nimport './ViewOnButton.css'\n\nexport function ViewOnButton ({ url, text, icon }: {\n  url: string,\n  text: string,\n  icon: any,\n }) {\n  return (\n    <>\n      <Button\n        className='vob-get-links'\n        color='secondary'\n        variant='contained'\n        sx={{ display: { lg: 'flex', xs: 'none' } }}\n        endIcon={icon}\n        href={url}\n        target='_blank'\n        rel='noreferrer'\n      >\n        {text}\n      </Button>\n      <Button\n        className='vob-get-links vob-get-links-compact'\n        color='secondary'\n        variant='contained'\n        sx={{ display: { md: 'flex', lg: 'none' }, paddingRight: '10px' }}\n      >\n        <span className='vob-get-links-icon'>\n          {icon}\n        </span>\n      </Button>\n    </>\n  )\n}\n","import { AppBar, Box, Button, ButtonGroup, Container, IconButton, Menu, MenuItem, Toolbar, Typography } from '@mui/material'\nimport { Link } from 'react-router-dom'\nimport './Header.css'\nimport { FaBars, FaNpm } from 'react-icons/fa'\nimport { GoMarkGithub } from 'react-icons/go'\nimport { useState } from 'react'\nimport { Logo } from './Logo'\nimport { ViewOnButton } from './ViewOnButton'\n\nconst pages = [\n  { name: 'Colors Sheet', link: '/sheet' },\n  { name: 'CSS Color Cheet', link: '/css-sheet' },\n  { name: 'Color picker', link: '/picker' },\n]\n\nexport function Header () {\n\n  const [anchorElNav, setAnchorElNav] = useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  }\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null)\n  }\n\n\n  return (\n    <AppBar position='sticky' enableColorOnDark>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters sx={{ justifyContent: 'start', display: 'flex' }}>\n          <Logo sx={{ mr: 2 }} />\n\n          <Box sx={{ flexGrow: 0, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Link to={page.link} key={page.name}>\n                <Button\n                  key={page.name}\n                  sx={{ my: 2, display: 'block' }}\n                  color='secondary'\n                >\n                  <Typography textAlign=\"center\">\n                    {page.name}\n                  </Typography>\n                </Button>\n              </Link>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0, display: 'flex' }}>\n            <ButtonGroup variant=\"contained\" sx={{ marginLeft: '1em' }}>\n              <ViewOnButton\n                url='https://github.com/russoedu/font-color-contrast'\n                text='view on GitHub'\n                icon={<GoMarkGithub />}\n              />\n              <ViewOnButton\n                url='https://www.npmjs.com/package/font-color-contrast'\n                text='view on NPM'\n                icon={<FaNpm />}\n              />\n            </ButtonGroup>\n          </Box>\n\n          <Box sx={{ flexGrow: 0, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"menu\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <FaBars />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem key={page.name} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">\n                    <Link to={page.link}>\n                      {page.name}\n                    </Link>\n                  </Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n      {/* <Toolbar>\n        <Typography className='navbar-item logo' variant='h5' component='div'>\n          <Link to='/'>\n            <img src=\"/font-color-contrast-logo.svg\" alt=\"logo\" />\n            <div>font-color-contrast</div>\n          </Link>\n        </Typography>\n        <Typography className='navbar-item' variant='h6' component='div'>\n          <Link to='/sheet'>\n            Color sheet demo\n          </Link>\n        </Typography>\n        <Typography className='navbar-item' variant='h6' component='div'>\n          <Link to='/picker'>\n            Color picker demo\n          </Link>\n        </Typography>\n        <Typography className='navbar-item' variant='h6' component='div'>\n          <Link to='/css-sheet'>\n            CSS Color sheet demo\n          </Link>\n        </Typography>\n        <div className='buttons'>\n          <Button\n            className='vob-get-links'\n            color='secondary'\n            variant='contained'\n            endIcon={<GoMarkGithub />}\n          >\n            <a\n              href='https://github.com/russoedu/font-color-contrast'\n              target='_blank'\n              rel='noreferrer'\n            >\n              view on GitHub\n            </a>\n          </Button>\n          <Button\n            className='vob-get-links'\n            color='secondary'\n            variant='contained'\n            endIcon={<FaNpm />}\n          >\n            <a\n              href='https://www.npmjs.com/package/font-color-contrast'\n              target='_blank'\n              rel='noreferrer'\n            >\n              view on npm\n            </a>\n          </Button>\n        </div>\n      </Toolbar> */}\n    </AppBar>\n  )\n}\n","import './Slider.css'\n\nexport function Slider ({ id= 'slider', className, min, max, vertical = false, value, setValue }: {\n  id?: string,\n  className?: string,\n  min: number,\n  max: number,\n  value: number,\n  vertical?: boolean,\n  setValue: (React.Dispatch<React.SetStateAction<number>>),\n}) {\n  let cls: string = ''\n  if (className && vertical) {\n    cls = className + ' vertical'\n  } else if (className) {\n    cls = className\n  } else if (vertical) {\n    cls = 'vertical'\n  }\n\n  function handleSlider(event: any) {\n    setValue(event.target.value)\n  }\n\n  return (\n    <input\n      id={id}\n      className={cls}\n      type='range'\n      min={min}\n      max={max}\n      value={value}\n      onChange={handleSlider}\n    />\n  )\n}\n","import './ColorCode.css'\n\nexport function toHex (num: number) {\n  const txt = Number(num).toString(16).toUpperCase()\n  return '0'.repeat(2 - txt.length) + txt\n}\n\nexport function ColorCode ({ color, red, green, blue }: { color?: string, red?: number, green?: number, blue?: number }) {\n  let r = '00'\n  let g = '00'\n  let b = '00'\n\n  console.log(red, green, blue, color)\n\n  if (red !== undefined && green !== undefined && blue !== undefined) {\n    r = toHex(red)\n    g = toHex(green)\n    b = toHex(blue)\n  } else if (color !== undefined) {\n    const clean = color.replace(/#\\s?/, '')\n    r = clean.substring(0, 2)\n    g = clean.substring(2, 4)\n    b = clean.substring(4, 6)\n  }\n\n  return (\n    <pre className='cc-code'>\n      # <span className='cc-red'>{r}</span> <span className='cc-green'>{g}</span> <span className='cc-blue'>{b}</span>\n    </pre>\n  )\n}\n","import generator from 'sequential-id-generator'\nimport fontColorContrast from 'font-color-contrast'\nimport './ColorsSheet.css'\nimport { Slider } from '../components/Slider'\nimport { ColorCode, toHex } from '../components/ColorCode'\nimport { Container, Paper } from '@mui/material'\nimport { useEffect, useState } from 'react'\nimport { Box } from '@mui/system'\n\nconst sliceSize = 16 ** 2\n\nexport function ColorsSheet ({red, setRed, green, setGreen }: {\n  red: number,\n  setRed: React.Dispatch<React.SetStateAction<number>>,\n  green: number,\n  setGreen: React.Dispatch<React.SetStateAction<number>>,\n}) {\n  const [colorsSheet, setColorsSheet] = useState([''])\n  const [colorsLoaded, setColorsLoaded] = useState(false)\n\n  useEffect(() => {\n    getColorsSheet(red, green).then(sheet => {\n      setColorsSheet(sheet)\n      setColorsLoaded(true)\n    })\n  }, [red, green])\n\n  function colorSheet () {\n    let i = 0\n    return colorsSheet.map((bgColor) => {\n        const color = fontColorContrast(bgColor)\n        const divStyle = {\n          backgroundColor: bgColor,\n          color: color,\n        }\n      return <div key={i++} className='color-block' style={divStyle}>{bgColor}</div>\n    })\n  }\n\n  return (\n    <Container className='container'>\n      {!colorsLoaded\n        ? <div>Loading colors sheet, this might take a while</div>\n        : <>\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexWrap: 'wrap',\n                padding: '1em 0',\n              }}\n            >\n              <Slider\n                className='slider red-slider'\n                min={0}\n                max={255}\n                value={red}\n                setValue={setRed}\n              />\n              <Slider\n                className='slider green-slider'\n                min={0}\n                max={255}\n                value={green}\n                setValue={setGreen}\n              />\n              <span className='pagination'>from <ColorCode red={red} green={green} blue={0} /> to <ColorCode red={red} green={green} blue={0xff} /></span>\n            </Box>\n            <Paper className='demo colors-sheet' elevation={3}>\n              {colorSheet()}\n            </Paper>\n          </>\n        }\n    </Container>\n  )\n}\n\nasync function getColorsSheet (red: number, green: number): Promise<string[]> {\n  const r = toHex(red)\n  const g = toHex(green)\n\n  const colorsSheet: string[] = ['#' + r + g + '00']\n  const colors = generator(r + g + '00', '0123456789ABCDEF')\n\n  for (let i = 1; i < sliceSize; i++) {\n    colorsSheet.push('#' + colors.next().value)\n  }\n\n  return colorsSheet\n}\n","import { MenuItem } from \"@mui/material\"\n\nexport const fontFamilies = [\n  { name: 'Arial', value: 'Arial, Helvetica, sans-serif' },\n  { name: 'Arial Black', value: '\"Arial Black\", Gadget' },\n  { name: 'Comic Sans', value: '\"Comic Sans MS\", cursive' },\n  { name: 'Courier New', value: '\"Courier New\", monospace' },\n  { name: 'Georgia', value: 'Georgia, serif' },\n  { name: 'Impact', value: 'Impact, Charcoal' },\n  { name: 'Lucida Console', value: '\"Lucida Console\", Monaco' },\n  { name: 'Lucida Sans Unicode', value: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif' },\n  { name: 'Palatino Linotype', value: '\"Palatino Linotype\", \"Book Antiqua\", Palatino, serif' },\n  { name: 'Tahoma', value: 'Tahoma, Geneva, sans-serif' },\n  { name: 'Times New Roman', value: '\"Times New Roman\", Times, serif' },\n  { name: 'Trebuchet', value: '\"Trebuchet MS\", sans-serif' },\n  { name: 'Verdana', value: 'Verdana, Geneva, sans-serif' },\n  { noRead: true, name: 'Symbol', value: 'Symbol' },\n  { noRead: true, name: 'Webdings', value: 'Webdings' },\n  { noRead: true, name: 'Wingdings', value: 'Wingdings' },\n  { name: 'MS Sans Serif', value: '\"MS Sans Serif\", Geneva, sans-serif' },\n  { name: 'MS Serif', value: '\"MS Serif\", \"New York\", serif' },\n]\n\nexport const fontSizes = [\n  '6pt',\n  '7pt',\n  '8pt',\n  '9pt',\n  '10pt',\n  '11pt',\n  '12pt',\n  '14pt',\n  '16pt',\n  '18pt',\n  '20pt',\n  '24pt',\n]\n\nexport const fontOptions = fontFamilies.map((font, index) => {\n  return(\n    <MenuItem\n      style={{ fontFamily: font.noRead ? fontFamilies[0].value : font.value }}\n      key={'font-' + font.name}\n      value={index}\n    >\n      {font.name}\n    </MenuItem>\n  )\n})\n\nexport const sizeOptions = fontSizes.map((size, index) => {\n  return(\n    <MenuItem\n      key={'size-' + size}\n      value={index}\n    >\n      {size}\n    </MenuItem>\n  )\n})\n","import { HexColorPicker } from 'react-colorful'\nimport fontColorContrast from 'font-color-contrast'\nimport { Container, InputLabel, Paper, Select, FormControl, Card, CardContent, Typography, Grid } from '@mui/material'\nimport { fontFamilies, fontOptions, fontSizes, sizeOptions } from '../components/font'\n\nimport './ColorPicker.css'\nimport { useState } from 'react'\nimport { ColorCode } from '../components/ColorCode'\n\nexport function ColorPicker ({ fontIndex, setFontIndex, color, setColor, sizeIndex, setSizeIndex }: {\n    fontIndex: number,\n    setFontIndex: React.Dispatch<React.SetStateAction<number>>,\n    color: string,\n    setColor: React.Dispatch<React.SetStateAction<string>>\n    sizeIndex: number,\n    setSizeIndex: React.Dispatch<React.SetStateAction<number>>\n}){\n\n  const [bgColor, setBgColor] = useState('#ffffff')\n\n  function handleFontChange (event: any) {\n    setFontIndex(event.target.value)\n  }\n\n  function handleSizeChange (event: any) {\n    setSizeIndex(event.target.value)\n  }\n\n  function handleColorChange (color: string) {\n    setColor(color)\n    setBgColor(fontColorContrast(color))\n  }\n\n  return (\n    <Container className='cp-container'>\n      <div className='cp-font-selector cp-container-item'>\n        <FormControl\n          sx={{\n            marginRight: '1em',\n            width: '200px',\n          }}\n        >\n          <InputLabel id=\"font-label\">font</InputLabel>\n          <Select\n            labelId=\"font-label\"\n            id=\"font\"\n            label=\"Font\"\n            value={fontIndex}\n            onChange={handleFontChange}\n          >\n            {fontOptions}\n          </Select>\n        </FormControl>\n        <FormControl\n           sx={{\n            width: '100px',\n          }}\n        >\n          <InputLabel id=\"font-size\">size</InputLabel>\n          <Select\n            labelId=\"font-size\"\n            id=\"size\"\n            label=\"Size\"\n            value={sizeIndex}\n            onChange={handleSizeChange}\n          >\n            {sizeOptions}\n          </Select>\n        </FormControl>\n      </div>\n      <div className='cp-color-picker cp-container-item'>\n        <HexColorPicker color={color} onChange={handleColorChange} />\n        <Card\n          className='color-picker-details' style={{\n            backgroundColor: color,\n            color: bgColor,\n          }}\n        >\n          <CardContent>\n            <Grid container spacing={2} columns={16}>\n              <Grid item xs={7} sx={{ textAlign: 'right'}}>\n                <Typography>\n                  color:\n                </Typography>\n              </Grid>\n              <Grid item xs={9} sx={{ paddingLeft: '0' }}>\n                <span><ColorCode color={color}/></span>\n              </Grid>\n              <Grid item xs={7} sx={{ textAlign: 'right'}}>\n                <Typography>\n                  bg:\n                </Typography>\n              </Grid>\n              <Grid item xs={9} sx={{ paddingLeft: '0' }}>\n                <span><ColorCode color={bgColor}/></span>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </div>\n      <Paper\n        className='cp-demo-bg cp-container-item'\n        elevation={3}\n        style={{\n          backgroundColor: color,\n          color: bgColor,\n          fontFamily: fontFamilies[fontIndex].value,\n          fontSize: fontSizes[sizeIndex],\n        }}\n      >\n        <h1>{fontFamilies[fontIndex].name} {fontSizes[sizeIndex]}</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris non mi sit amet eros ultrices efficitur. Integer et orci accumsan lacus luctus placerat non ut tellus. Praesent et cursus turpis. Phasellus pharetra orci et enim congue sodales. Cras quis tellus scelerisque, pharetra augue sed, lacinia diam. Nulla sed varius tellus. Fusce egestas neque vitae aliquet laoreet. Vivamus vestibulum diam non tellus tristique, sit amet imperdiet sem gravida.</p>\n        <p><i>Mauris felis orci, accumsan vitae vestibulum et, vehicula ac turpis. Aliquam orci ex, cursus sed porttitor sed, ultricies sit amet augue. Nunc iaculis elementum varius. Curabitur ullamcorper auctor odio, ut eleifend metus. Nulla porta massa ut lorem suscipit tincidunt. Aenean a augue lectus. Cras a odio dignissim, pellentesque dolor et, ultrices quam. Duis id tincidunt lorem. In porta massa non tempor interdum. Morbi eu nisl at nibh cursus vehicula. Etiam posuere scelerisque purus, ac venenatis sem auctor sit amet. Quisque tempor ac odio eget scelerisque. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Vestibulum a consectetur sem, vel sodales neque. Pellentesque vestibulum lacus a arcu gravida efficitur.</i></p>\n        <p><strong>Nullam sit amet lorem lacus. Vivamus ante felis, tempus nec dapibus porttitor, porta id nibh. Quisque faucibus, lacus eu vehicula commodo, lectus orci commodo nibh, et ultricies nunc tellus at est. Nulla vel suscipit lorem. Mauris gravida blandit ligula, pretium scelerisque odio facilisis quis. Fusce et urna eu diam varius sollicitudin. In vel nibh id orci mattis lacinia. Nullam ac purus ac est pretium molestie quis quis velit.</strong></p>\n      </Paper>\n    </Container>\n  )\n}\n","import { Snackbar, Tooltip } from '@mui/material'\nimport MuiAlert, { AlertProps } from '@mui/material/Alert'\nimport { useState, forwardRef, BaseSyntheticEvent, SyntheticEvent, ReactElement } from 'react'\nimport { FaCopy } from 'react-icons/fa'\n\nimport Prism  from 'prismjs'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/themes/prism.css'\n\nimport './Code.css'\n\nexport function Code ({ children, copy = false, ts = false}: {\n  children: string,\n  copy?: boolean,\n  ts?: boolean,\n}): JSX.Element {\n  const [open, setOpen] = useState(false)\n\n  const Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant='filled' {...props} />\n  })\n\n  function handleClick (event: BaseSyntheticEvent) {\n    navigator.clipboard.writeText(event.target.textContent)\n    setOpen(true);\n  }\n\n  function handleClose (event?: SyntheticEvent, reason?: string) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  function highLight () {\n    let content: ReactElement<any, any> | string\n    if (ts && children) {\n      const parsed = Prism.highlight(children, Prism.languages.typescript, 'typescript')\n      content = <span dangerouslySetInnerHTML={{ __html: parsed }} />\n    } else {\n      content = children\n    }\n    if (copy) {\n      return (\n        <>\n          <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity='success' sx={{ width: '100%' }}>\n              Copied\n            </Alert>\n          </Snackbar>\n          <Tooltip title='Copy to clipboard'>\n            <pre className='copy-to-clipboard' onClick={handleClick}>\n              <FaCopy />\n              {content}\n            </pre>\n          </Tooltip>\n        </>\n      )\n    } else {\n      return (\n        <pre>\n          {content}\n        </pre>\n      )\n    }\n  }\n\n  return (\n    <>\n      {highLight()}\n    </>\n  )\n}\n","import { Container, Paper, Tab, Tabs } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Code } from '../components/Code';\nimport './Home.css'\n\n\n\nexport function Home () {\n  const [exampleTab, setExampleTab] = useState('js');\n\n  const handleExampleTabChange = (event: any, newValue: any) => {\n    setExampleTab(newValue);\n  };\n  return (\n    <Container className='container'>\n      <Paper className='readme' elevation={3}>\n        <h1>font-color-contrast</h1>\n        <p>\n          <a href='https://www.npmjs.com/package/font-color-contrast' target='_blank' rel='noreferrer'>\n            <img src='https://camo.githubusercontent.com/a541dffe52f51f77d240db7203a491f55eaaba2b12cc190456d95696795ee021/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f666f6e742d636f6c6f722d636f6e74726173742e737667' alt='npm' data-canonical-src='https://img.shields.io/npm/v/font-color-contrast.svg'/>\n          </a>\n          <a href='https://github.com/russoedu/font-color-contrast/actions/workflows/main.yml' target='_blank' rel='noreferrer'>\n            <img src='https://github.com/russoedu/font-color-contrast/actions/workflows/main.yml/badge.svg' alt='CI Pipeline'/>\n          </a>\n          <a href='https://scrutinizer-ci.com/g/russoedu/font-color-contrast/build-status' target='_blank' rel='noreferrer'>\n            <img src='https://camo.githubusercontent.com/f8a205550f1cdd1c2392196be46394495d5e4966a8c1cf9e15f30bd3057e1227/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f727573736f6564752f666f6e742d636f6c6f722d636f6e74726173742f6261646765732f6275696c642e706e673f623d6d6173746572' alt='Build Status' data-canonical-src='https://scrutinizer-ci.com/g/russoedu/font-color-contrast/badges/build.png'/>\n          </a>\n          <a href='https://coveralls.io/github/russoedu/font-color-contrast' target='_blank' rel='noreferrer'>\n              <img src='https://camo.githubusercontent.com/e489fcf209af233f6b8e15eca9be16dbf5ebbbcef18ce767d1c10e8076963692/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f727573736f6564752f666f6e742d636f6c6f722d636f6e74726173742f62616467652e7376673f6272616e63683d7473' alt='Coverage Status' data-canonical-src='https://coveralls.io/repos/github/russoedu/font-color-contrast/badge.svg' />\n          </a>\n          <a href='https://scrutinizer-ci.com/g/russoedu/font-color-contrast/' target='_blank' rel='noreferrer'>\n            <img src='https://camo.githubusercontent.com/4006117bbba0c578c05fedad4b296974ce1f391fcd45e9e44372255a1118af0c/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f727573736f6564752f666f6e742d636f6c6f722d636f6e74726173742f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572' alt='Scrutinizer Code Quality' data-canonical-src='https://scrutinizer-ci.com/g/russoedu/font-color-contrast/badges/quality-score.png' />\n          </a>\n          <a href=\"https://codeclimate.com/github/russoedu/font-color-contrast/maintainability\" target='_blank' rel='noreferrer'>\n            <img src=\"https://api.codeclimate.com/v1/badges/daed002166b4a0404ea5/maintainability\" alt='Code Climate code quality'/>\n          </a>\n          <a href=\"https://www.codacy.com/gh/russoedu/font-color-contrast/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=russoedu/font-color-contrast&amp;utm_campaign=Badge_Grade\" target='_blank' rel='noreferrer'>\n            <img src=\"https://app.codacy.com/project/badge/Grade/320aed91c5c5438397df48b1cc85cc8a\" alt='Codacy code quality'/>\n          </a>\n          <a href='https://snyk.io/test/npm/font-color-contrast' target='_blank' rel='noreferrer'>\n            <img src='https://camo.githubusercontent.com/77980cfc13198e616164c295c2ef0ef3fe9d4d4ad0342487847401cd09bfeb02/68747470733a2f2f736e796b2e696f2f746573742f6e706d2f666f6e742d636f6c6f722d636f6e74726173742f62616467652e737667' alt='Known Vulnerabilities' data-canonical-src='https://snyk.io/test/npm/font-color-contrast/badge.svg' />\n          </a>\n        </p>\n\n        <p><strong>font-color-contrast</strong> is a JavaScript module to help you select black or white for a font according to the brightness of the background color to give you the best possible contrast and readability.</p>\n        <h2>How does it work</h2>\n        <p><strong>font-color-contrast</strong> uses the algorythm described in the article <a href='https://alienryderflex.com/hsp.html' target='_blank' rel='noreferrer'>HSP Color Model — Alternative to HSV (HSB) and HSL</a> where brightness is described as</p>\n        <img className='formula' alt='brightness = sqrt(0.299 * red^2 + 0.587 * green^2 + 0.114 * blue^2)' src='https://render.githubusercontent.com/render/math?math=brightness=\\sqrt{0.299 * red^2 %2B 0.587 * green^2 %2B 0.114 * blue^2}' />\n        <p>Any brightness smaller than 50% means the background is dark.</p>\n        <p>Any brightness bigger than 50% means the background is light.</p>\n        <p>This way, <strong>font-color-contrast</strong> will (with the default threshold of 0.5) return white (<code>'#ffffff'</code>) for dark brightness and black (<code>'#000000'</code>) for light brightness.</p>\n        <p>You can change this default behaviour by passing the optional <code>threshold</code> parameter, so the comparison will be with the value you passed, not with 50%.</p>\n        <h2>Installation</h2>\n        <Code copy>\n          npm i font-color-contrast\n        </Code>\n        <h2>Usage</h2>\n        <p>You can use <strong>font-color-contrast</strong> 4 ways:</p>\n        <ul>\n          <li>with a named CSS color</li>\n          <li>with a hexadecimal color string</li>\n          <li>with a color number</li>\n          <li>with separate RGB color numbers</li>\n          <li>with an array of RGB color numbers</li>\n        </ul>\n        <p>An optional parameter for contrast (<code>threshold</code>, from 0 to 1) can be used on all options.</p>\n\n        <h3>Named CSS color</h3>\n        <Code\n          ts\n        >\n  {`/**\n * @param cssColor The CSS named color string. The list of colors is defined as a TypeScript type to help the usage.\n * @param threshold Contrast threshold to control the resulting font color, float values from 0 to 1. Default is 0.5.\n */\nfunction fontColorContrast (cssColor: CssColor, threshold?: number): '#ffffff' | '#000000'`}\n        </Code>\n        <Code\n          ts\n          copy\n        >\n  {`import fontColorContrast from 'font-color-contrast'\n\nconst fc1 = fontColorContrast('deepskyblue') // '#000000'\n\nconst fc2 = fontColorContrast('darkslateblue') // '#FFFFFF'`}\n        </Code>\n\n        <h3>Hexadecimal color string</h3>\n        <Code\n          ts\n        >\n  {`/**\n * @param hex The hex color string must be a valid hexadecimal color number to work correctly. Works with or without '#', with 3 or 6 color chars. Any other length or an invalid hex character will be ignored. A space is allowed between the hash symbol and the number.\n * @param threshold Contrast thres\n */\nfunction fontColorContrast (hex: string, threshold?: number): '#ffffff' | '#000000'`}\n        </Code>\n        <p>It can have the hash symbol or not, and use 6 or 3 characters. The <code>threshold</code> parameter is optional.</p>\n        <Code\n          ts\n          copy\n        >\n  {`import fontColorContrast from 'font-color-contrast'\n\nconst fc1 = fontColorContrast('#00CC99') // '#000000'\n\nconst fc2 = fontColorContrast('#0C9') // '#000000'\n\nconst fc3 = fontColorContrast('00CC99') // '#000000'\nconst fc4 = fontColorContrast('00CC99', 0.7) // '#ffffff'`}\n        </Code>\n\n        <h3>Color number</h3>\n        <Code\n          ts\n        >\n  {`/**\n * @param hex The hex color number must be an integer between 0 and 0xffffff (16777215).\n * @param threshold Contrast threshold to control the resulting font color, float values from 0 to 1. Default is 0.5.\n */\nfunction fontColorContrast (hex: number, threshold?: number): '#ffffff' | '#000000'`}\n        </Code>\n        <p>The number can be a hexadecimal or an integer. The <code>threshold</code> parameter is optional.</p>\n        <Code\n          ts\n          copy\n        >\n  {`import fontColorContrast from 'font-color-contrast'\n\nconst fc1 = fontColorContrast(0x00cc99) // '#000000'\n\nconst fc2 = fontColorContrast(52377) // '#000000'\nconst fc3 = fontColorContrast(52377, 0.7) // '#ffffff'`}\n        </Code>\n\n        <h3>Separate RGB color number</h3>\n        <Code\n          ts\n        >\n  {`/**\n * @param red The red portion of the color. Must be an integer between 0 and 255.\n * @param green The green portion of the color. Must be an integer between 0 and 255.\n * @param blue The blue portion of the color. Must be an integer between 0 and 255.\n * @param threshold Contrast threshold to control the resulting font color, float values from 0 to 1. Default is 0.5.\n */\nfunction fontColorContrast (red: number, green: number, blue: number, threshold?: number): '#ffffff' | '#000000'`}\n        </Code>\n        <p>Again, each number can be a hexadecimal or an integer and you can mix it. The <code>threshold</code> parameter is optional.</p>\n        <Code\n          ts\n          copy\n        >\n  {`import fontColorContrast from 'font-color-contrast'\n\nconst fc1 = fontColorContrast(0x0, 0xcc, 0x99) // '#000000'\n\nconst fc2 = fontColorContrast(0, 204, 153) // '#000000'\nconst fc3 = fontColorContrast(0, 204, 153, 0.7) // '#ffffff'\n\nconst fc4 = fontColorContrast(0, 0xcc, 153) // '#000000'\nconst fc5 = fontColorContrast(0, 0xcc, 153, 0.7) // '#ffffff'`}\n        </Code>\n\n        <h3>Array of RGB color number</h3>\n        <Code\n          ts\n        >\n  {`/**\n * @param rgbArray Array with red, green and blue. Each value must be an integer between 0 and 255.\n * @param threshold Contrast threshold to control the resulting font color, float values from 0 to 1. Default is 0.5.\n */\nfunction fontColorContrast(rgbArray: number[], threshold?: number): '#ffffff' | '#000000'`}\n        </Code>\n        <p>Each number can be a hexadecimal or an integer and you can mix it. The <code>threshold</code> parameter is optional.</p>\n        <Code\n          ts\n          copy\n        >\n  {`import fontColorContrast from 'font-color-contrast'\n\nconst fc1 = fontColorContrast([0x0, 0xcc, 0x99]) // '#000000'\n\nconst fc2 = fontColorContrast([0, 204, 153]) // '#000000'\nconst fc3 = fontColorContrast([0, 204, 153], 0.7) // '#ffffff'\n\nconst fc4 = fontColorContrast([0, 0xcc, 153]) // '#000000'\nconst fc5 = fontColorContrast([0, 0xcc, 153], 0.7) // '#ffffff'`}\n        </Code>\n\n        <h2>Ready to go examples</h2>\n        <Box sx={{ width: '100%' }}>\n            <Tabs\n              value={exampleTab}\n              onChange={handleExampleTabChange}\n              aria-label=\"wrapped label tabs example\"\n            >\n              <Tab value=\"js\" label=\"JS\" />\n              <Tab value=\"react\" label=\"React\" />\n            </Tabs>\n          </Box>\n          {exampleTab === 'js'\n            ? <Code\n                ts\n                copy\n              >{`import fontColorContrast from 'font-color-contrast'\n\nconst bgColor = '#fc7a34'\nconst fontColor = fontColorContrast(bgColor)\n\nconst content = \\`<p style=\"background-color: \\${bgColor}; color: \\${color};\">Content here</p>\\`\n`}\n              </Code>\n            : <Code\n                ts\n                copy\n              >{`import fontColorContrast from 'font-color-contrast'\nimport { useState } from 'react'\n\nexport function ColorPicker () {\nconst [color, setColor] = useState('#fc12f4')\n\nfunction handleColorChange (event: any) {\n  setColor(event.target.value)\n}\n\n  return (\n    <div>\n      <input type=\"color\" name=\"background\" value={color} onChange={handleColorChange}/>\n      <p style={{\n        backgroundColor: color,\n        color: fontColorContrast(color),\n      }}\n      >\n        Content here\n      </p>\n    </div>\n  )\n}\n`}\n              </Code>\n          }\n        <p>Check it in action on <Link to='/sheet'>Color sheet</Link>, <Link to='/css-sheet'>CSS color sheet</Link> or on <Link to='/picker'>Color picker</Link>.</p>\n        <h2>Tests</h2>\n        <p>Tests made using <a href='https://jestjs.io/' target='_blank' rel='noreferrer'>Jest</a>.</p>\n        <h2>Version history</h2>\n        <h3>0 -{'>'} 8.1.1</h3>\n        <p>JavaScript version, accepting strings for RGB</p>\n        <h3>9.0.0 -{'>'} 9.0.2</h3>\n        <p>TypeScript version.</p>\n        <p>Only numbers are now accepted as params when using array or RGB, because it was impossible to know if the string was decimal or hexadecimal. Accepting only numbers we can be sure the correct values are being used to calculate the contrast.</p>\n        <h3>9.1.0</h3>\n        <p>Updated algorithm from <a href='https://alienryderflex.com/hsp.html' target='_blank' rel='noreferrer'>https://alienryderflex.com/hsp.html</a> with new thresholds for better contrast.</p>\n        <h3>10.0.0</h3>\n        <p>Included the optional threshold parameter (thanks, <a href='https://github.com/franciscohanna92' target='_blank' rel='noreferrer'>franciscohanna92</a>).</p>\n        <h3>10.0.1</h3>\n        <p>Changed target to ES2015</p>\n        <h3>10.1.0</h3>\n        <p>Fixed package instalation from the new TS version</p>\n        <h3>11.0.0</h3>\n        <p>Many improved checks to make sure the color is a valid set color and recreated all tests. The function now encapsulates a function in a class.</p>\n        <p>CSS named colors can now be passed as a param.</p>\n        <h3>11.0.1</h3>\n        <p>Checking if the color numbers are integer.</p>\n      </Paper>\n    </Container>\n  )\n}\n","export const cssNamedColors = [\n    {\n        name: 'aliceblue',\n        hex: '#f0f8ff',\n    },\n    {\n        name: 'antiquewhite',\n        hex: '#faebd7',\n    },\n    {\n        name: 'aqua',\n        hex: '#00ffff',\n    },\n    {\n        name: 'aquamarine',\n        hex: '#7fffd4',\n    },\n    {\n        name: 'azure',\n        hex: '#f0ffff',\n    },\n    {\n        name: 'beige',\n        hex: '#f5f5dc',\n    },\n    {\n        name: 'bisque',\n        hex: '#ffe4c4',\n    },\n    {\n        name: 'black',\n        hex: '#000000',\n    },\n    {\n        name: 'blanchedalmond',\n        hex: '#ffebcd',\n    },\n    {\n        name: 'blue',\n        hex: '#0000ff',\n    },\n    {\n        name: 'blueviolet',\n        hex: '#8a2be2',\n    },\n    {\n        name: 'brown',\n        hex: '#a52a2a',\n    },\n    {\n        name: 'burlywood',\n        hex: '#deb887',\n    },\n    {\n        name: 'cadetblue',\n        hex: '#5f9ea0',\n    },\n    {\n        name: 'chartreuse',\n        hex: '#7fff00',\n    },\n    {\n        name: 'chocolate',\n        hex: '#d2691e',\n    },\n    {\n        name: 'coral',\n        hex: '#ff7f50',\n    },\n    {\n        name: 'cornflowerblue',\n        hex: '#6495ed',\n    },\n    {\n        name: 'cornsilk',\n        hex: '#fff8dc',\n    },\n    {\n        name: 'crimson',\n        hex: '#dc143c',\n    },\n    {\n        name: 'cyan',\n        hex: '#00ffff',\n    },\n    {\n        name: 'darkblue',\n        hex: '#00008b',\n    },\n    {\n        name: 'darkcyan',\n        hex: '#008b8b',\n    },\n    {\n        name: 'darkgoldenrod',\n        hex: '#b8860b',\n    },\n    {\n        name: 'darkgray',\n        hex: '#a9a9a9',\n    },\n    {\n        name: 'darkgreen',\n        hex: '#006400',\n    },\n    {\n        name: 'darkgrey',\n        hex: '#a9a9a9',\n    },\n    {\n        name: 'darkkhaki',\n        hex: '#bdb76b',\n    },\n    {\n        name: 'darkmagenta',\n        hex: '#8b008b',\n    },\n    {\n        name: 'darkolivegreen',\n        hex: '#556b2f',\n    },\n    {\n        name: 'darkorange',\n        hex: '#ff8c00',\n    },\n    {\n        name: 'darkorchid',\n        hex: '#9932cc',\n    },\n    {\n        name: 'darkred',\n        hex: '#8b0000',\n    },\n    {\n        name: 'darksalmon',\n        hex: '#e9967a',\n    },\n    {\n        name: 'darkseagreen',\n        hex: '#8fbc8f',\n    },\n    {\n        name: 'darkslateblue',\n        hex: '#483d8b',\n    },\n    {\n        name: 'darkslategray',\n        hex: '#2f4f4f',\n    },\n    {\n        name: 'darkslategrey',\n        hex: '#2f4f4f',\n    },\n    {\n        name: 'darkturquoise',\n        hex: '#00ced1',\n    },\n    {\n        name: 'darkviolet',\n        hex: '#9400d3',\n    },\n    {\n        name: 'deeppink',\n        hex: '#ff1493',\n    },\n    {\n        name: 'deepskyblue',\n        hex: '#00bfff',\n    },\n    {\n        name: 'dimgray',\n        hex: '#696969',\n    },\n    {\n        name: 'dimgrey',\n        hex: '#696969',\n    },\n    {\n        name: 'dodgerblue',\n        hex: '#1e90ff',\n    },\n    {\n        name: 'firebrick',\n        hex: '#b22222',\n    },\n    {\n        name: 'floralwhite',\n        hex: '#fffaf0',\n    },\n    {\n        name: 'forestgreen',\n        hex: '#228b22',\n    },\n    {\n        name: 'fuchsia',\n        hex: '#ff00ff',\n    },\n    {\n        name: 'gainsboro',\n        hex: '#dcdcdc',\n    },\n    {\n        name: 'ghostwhite',\n        hex: '#f8f8ff',\n    },\n    {\n        name: 'gold',\n        hex: '#ffd700',\n    },\n    {\n        name: 'goldenrod',\n        hex: '#daa520',\n    },\n    {\n        name: 'gray',\n        hex: '#808080',\n    },\n    {\n        name: 'green',\n        hex: '#008000',\n    },\n    {\n        name: 'greenyellow',\n        hex: '#adff2f',\n    },\n    {\n        name: 'grey',\n        hex: '#808080',\n    },\n    {\n        name: 'honeydew',\n        hex: '#f0fff0',\n    },\n    {\n        name: 'hotpink',\n        hex: '#ff69b4',\n    },\n    {\n        name: 'indianred',\n        hex: '#cd5c5c',\n    },\n    {\n        name: 'indigo',\n        hex: '#4b0082',\n    },\n    {\n        name: 'ivory',\n        hex: '#fffff0',\n    },\n    {\n        name: 'khaki',\n        hex: '#f0e68c',\n    },\n    {\n        name: 'lavender',\n        hex: '#e6e6fa',\n    },\n    {\n        name: 'lavenderblush',\n        hex: '#fff0f5',\n    },\n    {\n        name: 'lawngreen',\n        hex: '#7cfc00',\n    },\n    {\n        name: 'lemonchiffon',\n        hex: '#fffacd',\n    },\n    {\n        name: 'lightblue',\n        hex: '#add8e6',\n    },\n    {\n        name: 'lightcoral',\n        hex: '#f08080',\n    },\n    {\n        name: 'lightcyan',\n        hex: '#e0ffff',\n    },\n    {\n        name: 'lightgoldenrodyellow',\n        hex: '#fafad2',\n    },\n    {\n        name: 'lightgray',\n        hex: '#d3d3d3',\n    },\n    {\n        name: 'lightgreen',\n        hex: '#90ee90',\n    },\n    {\n        name: 'lightgrey',\n        hex: '#d3d3d3',\n    },\n    {\n        name: 'lightpink',\n        hex: '#ffb6c1',\n    },\n    {\n        name: 'lightsalmon',\n        hex: '#ffa07a',\n    },\n    {\n        name: 'lightseagreen',\n        hex: '#20b2aa',\n    },\n    {\n        name: 'lightskyblue',\n        hex: '#87cefa',\n    },\n    {\n        name: 'lightslategray',\n        hex: '#778899',\n    },\n    {\n        name: 'lightslategrey',\n        hex: '#778899',\n    },\n    {\n        name: 'lightsteelblue',\n        hex: '#b0c4de',\n    },\n    {\n        name: 'lightyellow',\n        hex: '#ffffe0',\n    },\n    {\n        name: 'lime',\n        hex: '#00ff00',\n    },\n    {\n        name: 'limegreen',\n        hex: '#32cd32',\n    },\n    {\n        name: 'linen',\n        hex: '#faf0e6',\n    },\n    {\n        name: 'magenta',\n        hex: '#ff00ff',\n    },\n    {\n        name: 'maroon',\n        hex: '#800000',\n    },\n    {\n        name: 'mediumaquamarine',\n        hex: '#66cdaa',\n    },\n    {\n        name: 'mediumblue',\n        hex: '#0000cd',\n    },\n    {\n        name: 'mediumorchid',\n        hex: '#ba55d3',\n    },\n    {\n        name: 'mediumpurple',\n        hex: '#9370db',\n    },\n    {\n        name: 'mediumseagreen',\n        hex: '#3cb371',\n    },\n    {\n        name: 'mediumslateblue',\n        hex: '#7b68ee',\n    },\n    {\n        name: 'mediumspringgreen',\n        hex: '#00fa9a',\n    },\n    {\n        name: 'mediumturquoise',\n        hex: '#48d1cc',\n    },\n    {\n        name: 'mediumvioletred',\n        hex: '#c71585',\n    },\n    {\n        name: 'midnightblue',\n        hex: '#191970',\n    },\n    {\n        name: 'mintcream',\n        hex: '#f5fffa',\n    },\n    {\n        name: 'mistyrose',\n        hex: '#ffe4e1',\n    },\n    {\n        name: 'moccasin',\n        hex: '#ffe4b5',\n    },\n    {\n        name: 'navajowhite',\n        hex: '#ffdead',\n    },\n    {\n        name: 'navy',\n        hex: '#000080',\n    },\n    {\n        name: 'oldlace',\n        hex: '#fdf5e6',\n    },\n    {\n        name: 'olive',\n        hex: '#808000',\n    },\n    {\n        name: 'olivedrab',\n        hex: '#6b8e23',\n    },\n    {\n        name: 'orange',\n        hex: '#ffa500',\n    },\n    {\n        name: 'orangered',\n        hex: '#ff4500',\n    },\n    {\n        name: 'orchid',\n        hex: '#da70d6',\n    },\n    {\n        name: 'palegoldenrod',\n        hex: '#eee8aa',\n    },\n    {\n        name: 'palegreen',\n        hex: '#98fb98',\n    },\n    {\n        name: 'paleturquoise',\n        hex: '#afeeee',\n    },\n    {\n        name: 'palevioletred',\n        hex: '#db7093',\n    },\n    {\n        name: 'papayawhip',\n        hex: '#ffefd5',\n    },\n    {\n        name: 'peachpuff',\n        hex: '#ffdab9',\n    },\n    {\n        name: 'peru',\n        hex: '#cd853f',\n    },\n    {\n        name: 'pink',\n        hex: '#ffc0cb',\n    },\n    {\n        name: 'plum',\n        hex: '#dda0dd',\n    },\n    {\n        name: 'powderblue',\n        hex: '#b0e0e6',\n    },\n    {\n        name: 'purple',\n        hex: '#800080',\n    },\n    {\n        name: 'red',\n        hex: '#ff0000',\n    },\n    {\n        name: 'rosybrown',\n        hex: '#bc8f8f',\n    },\n    {\n        name: 'royalblue',\n        hex: '#4169e1',\n    },\n    {\n        name: 'saddlebrown',\n        hex: '#8b4513',\n    },\n    {\n        name: 'salmon',\n        hex: '#fa8072',\n    },\n    {\n        name: 'sandybrown',\n        hex: '#f4a460',\n    },\n    {\n        name: 'seagreen',\n        hex: '#2e8b57',\n    },\n    {\n        name: 'seashell',\n        hex: '#fff5ee',\n    },\n    {\n        name: 'sienna',\n        hex: '#a0522d',\n    },\n    {\n        name: 'silver',\n        hex: '#c0c0c0',\n    },\n    {\n        name: 'skyblue',\n        hex: '#87ceeb',\n    },\n    {\n        name: 'slateblue',\n        hex: '#6a5acd',\n    },\n    {\n        name: 'slategray',\n        hex: '#708090',\n    },\n    {\n        name: 'slategrey',\n        hex: '#708090',\n    },\n    {\n        name: 'snow',\n        hex: '#fffafa',\n    },\n    {\n        name: 'springgreen',\n        hex: '#00ff7f',\n    },\n    {\n        name: 'steelblue',\n        hex: '#4682b4',\n    },\n    {\n        name: 'tan',\n        hex: '#d2b48c',\n    },\n    {\n        name: 'teal',\n        hex: '#008080',\n    },\n    {\n        name: 'thistle',\n        hex: '#d8bfd8',\n    },\n    {\n        name: 'tomato',\n        hex: '#ff6347',\n    },\n    {\n        name: 'turquoise',\n        hex: '#40e0d0',\n    },\n    {\n        name: 'violet',\n        hex: '#ee82ee',\n    },\n    {\n        name: 'wheat',\n        hex: '#f5deb3',\n    },\n    {\n        name: 'white',\n        hex: '#ffffff',\n    },\n    {\n        name: 'whitesmoke',\n        hex: '#f5f5f5',\n    },\n    {\n        name: 'yellow',\n        hex: '#ffff00',\n    },\n    {\n        name: 'yellowgreen',\n        hex: '#9acd32',\n    },\n    {\n        name: 'rebeccapurple',\n        hex: '#663399',\n    },\n];\n//# sourceMappingURL=cssNamedColors.js.map\n","import fontColorContrast from 'font-color-contrast'\nimport './CssColorsSheet.css'\nimport { Container, Paper } from '@mui/material'\nimport { cssNamedColors } from '../components/cssNamedColors'\n\n\nexport function CssColorsSheet () {\n  function listColors () {\n    let i = 0\n    return cssNamedColors.map((bgColor) => {\n        const color = fontColorContrast(bgColor.hex)\n        const divStyle = {\n          backgroundColor: bgColor.hex,\n          color: color,\n        }\n      return <div key={i++} className='css-color-block' style={divStyle}>{bgColor.name}</div>\n    })\n  }\n\n  return (\n    <Container className='css-container'>\n      <Paper className='css-demo css-colors-sheet' elevation={3}>\n        {listColors()}\n      </Paper>\n    </Container>\n  )\n}\n","import { useState } from 'react'\nimport { HashRouter, Routes, Route } from 'react-router-dom'\nimport { Header } from './components/Header'\nimport { ColorsSheet } from './pages/ColorsSheet'\nimport { ColorPicker } from './pages/ColorPicker'\nimport { Home } from './pages/Home'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport './App.css'\nimport { CssColorsSheet } from './pages/CssColorsSheet'\n\nexport function App() {\n  const [red, setRed] = useState(0)\n  const [green, setGreen] = useState(0)\n  const [fontIndex, setFontIndex] = useState(0)\n  const [sizeIndex, setSizeIndex] = useState(7)\n  const [pickerColor, setPickerColor] = useState('#121212')\n\n  return (\n    <HashRouter>\n      <CssBaseline>\n        <Header></Header>\n        <Routes>\n          <Route\n            path='/'\n            element={<Home/>}\n          />\n          <Route\n            path='/picker'\n            element={<ColorPicker\n              fontIndex={fontIndex}\n              setFontIndex={setFontIndex}\n              sizeIndex={sizeIndex}\n              setSizeIndex={setSizeIndex}\n              color={pickerColor}\n              setColor={setPickerColor}\n            />}\n          />\n          <Route\n            path='/sheet'\n            element={<ColorsSheet\n              red={red}\n              setRed={setRed}\n              green={green}\n              setGreen={setGreen}\n            />}\n          />\n          <Route\n            path='/css-sheet'\n            element={<CssColorsSheet/>}\n          />\n        </Routes>\n      </CssBaseline>\n    </HashRouter>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import fontColorContrast from 'font-color-contrast'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { createTheme, ThemeProvider } from '@mui/material'\n\nconst theme = createTheme({\n  palette: {\n    getContrastText: fontColorContrast,\n    mode: 'dark',\n    background: {\n      default: '#424242',\n    },\n    primary: {\n      main: '#6b5b95',\n    },\n    secondary: {\n      main: '#feb236',\n    },\n    error: {\n      main: '#d64161',\n    },\n    warning: {\n      main: '#ff7b25',\n    },\n  },\n})\n\nconst page = (\n  <ThemeProvider theme={theme}>\n    <CssBaseline>\n      <App />\n    </CssBaseline>\n  </ThemeProvider>\n)\n\nReactDOM.render(page, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}